import fs from 'fs';

const ROOT = new URL('../../', import.meta.url);

function importJSON(path) {
  return JSON.parse(fs.readFileSync(path));
}

function getTsPkgs(subRoot) {
  return fs
    .readdirSync(new URL(subRoot, ROOT))
    .filter((name) => name.startsWith('mods-'))
    .map((name) => {
      // ./packages/package-name
      const relative = `./${subRoot}/${name}`;
      const packageJSON = importJSON(new URL(relative + '/package.json', ROOT));

      return {
        name: packageJSON.name,
        relative,
      };
    });
}

const tsPkgs = [...getTsPkgs('packages')];

fs.writeFileSync(
  new URL('tsconfig.json', ROOT),
  '/* This file is automatically generated by buildConfig/generators/tsconfig.js */\n' +
    JSON.stringify(
      {
        extends: './tsconfig.base.json',
        compilerOptions: {
          paths: tsPkgs.reduce(
            (prev, curr) => ({
              ...prev,
              [curr.name]: [`${curr.relative}/src`],
            }),
            {},
          ),
        },
      },
      null,
      2,
    ),
);
